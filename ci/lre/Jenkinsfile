// Copyright (c) 2021, Oracle and/or its affiliates.
// Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

pipeline {
    options {
        skipDefaultCheckout true
        timestamps ()
    }

    agent {
        docker {
            image "${RUNNER_DOCKER_IMAGE}"
            args "${RUNNER_DOCKER_ARGS}"
            registryUrl "${RUNNER_DOCKER_REGISTRY_URL}"
            label 'internal'
        }
    }

    environment {
            dev_lre_compartment_id = credentials('dev-lre-compartment-id')
            dev_lre_cluster_id = credentials('dev-lre-cluster-id')
            dev_lre_bastion_ip = credentials('dev_lre_bastion_ip')
            OCI_CLI_REGION = "us-ashburn-1"
            KUBECONFIG = "~/.oci/config"
    }


    stages {
        stage("create oci config file") {
            environment {
                OCI_CLI_AUTH="api_key"
                OCI_CLI_TENANCY = credentials('oci-dev-tenancy')
                OCI_CLI_USER = credentials('oci-dev-user-ocid')
                OCI_CLI_FINGERPRINT = credentials('oci-dev-api-key-fingerprint')
                OCI_CLI_KEY_FILE = credentials('oci-dev-api-key-file')
                OCI_REGION = "${env.OCI_CLI_REGION}"
            }
            steps {
                script{
                    sh """
                        mkdir -p ~/.oci
                        rm -rf ~/oci/config
                        {
                          echo '[DEFAULT]'
                          echo 'user=${OCI_CLI_USER}'
                          echo 'fingerprint=${OCI_CLI_FINGERPRINT}'
                          echo 'tenancy=${OCI_CLI_TENANCY}'
                          echo 'region=${OCI_CLI_REGION}'
                          echo 'key_file=${OCI_CLI_KEY_FILE}'
                        } >> ~/.oci/config
                        export KUBECONFIG=~/.oci/config
                    """
                }
            }
        }

        stage('Downlaod kubeconfig') {
            steps {
                script {
                    sh """
                        mkdir -p ~/.kube
                        rm -rf ~/.kube/config
                        # get kubeconfig from OCI
                        oci ce cluster create-kubeconfig \
                        --cluster-id ${dev_lre_cluster_id} \
                        --file ~/.kube/config \
                        --region ${OCI_CLI_REGION} \
                        --token-version 2.0.0  \
                        --kube-endpoint PRIVATE_ENDPOINT
                    """
                }
            }
        }

        stage('call sh-keygen to create public and private keys') {
            steps {
                script {
                    sh """
                        # delete the key file if it exists
                        rm -f ~/.ssh/id_rsa
                        # call ssh-keygen to create the keys
                        ssh-keygen -m PEM -N '' -f ~/.ssh/id_rsa
                        # export the ssh public key value for LRE cluster
                        export ssh_public_key_path=~/.ssh/id_rsa.pub
                        # export the ssh private key file for LRE cluster
                        export ssh_public_key_path=~/.ssh/id_rsa
                    """
                }
            }
        }

        stage('set up ssh tunnel') {
            steps {
                script {
                    sh """
                        export jenkins_user=$(whoami)'
                        echo "user = ${jenkins_user}"
                        echo "Create ssh tunnel"
                        cd ${GO_REPO_PATH}/verrazzano/
                        ./ci/scripts/lre_setup_ssh_tunnel.sh
                    """
                    }
                }
            }
        }

        stage('run kubectl to get nodes') {
            steps {
                script {
                    sh """
                        echo "run kubectl get nodes"
                        kubectl get nodes > ${WORKSPACE}/verrazzano/verrazzano-lre-nodes.log --tail -1
                    """
            }
        }
    }
}